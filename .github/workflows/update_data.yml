name: Update Helios Data Core

on:
  workflow_dispatch:
  schedule:
    # Runs reliably every 5 minutes
    - cron: '*/5 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Grant write permission to allow the job to commit back to the repository
      contents: write
      
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      # --- CHRONOS ENGINE UPGRADE ---
      # This step creates the "memory" for our AI.
      # It renames the last data file to data_previous.json.
      # The '|| true' ensures the workflow doesn't fail if this is the first run and the file doesn't exist.
      - name: Preserve previous data file for AI analysis
        run: mv data.json data_previous.json || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Harvester to generate new data.json
        run: python helios_harvester.py

      - name: Commit and push if data changed
        run: |
          git config --global user.name "Helios Chronos Engine"
          git config --global user.email "actions@github.com"
          
          # --- CHRONOS ENGINE UPGRADE ---
          # Add both the new data and the memory file to the commit
          git add data.json data_previous.json
          
          # Commit only if there are actual changes to the data
          git diff --staged --quiet || git commit -m "Update data core via Chronos Engine"
          git push